@using System
@using MusicCatalogueWebApp.Data.Models
@model MusicCatalogueWebApp.Data.Models.Recording

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Recording</h4>
        <hr />
        @Html.ValidationSummary(true)
        @Html.HiddenFor(model => model.RecordingId)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title)
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AlbumArtist, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AlbumArtist)
                @Html.ValidationMessageFor(model => model.AlbumArtist)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecordingDate, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RecordingDate)
                @Html.ValidationMessageFor(model => model.RecordingDate)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Type, new SelectList(Enum.GetValues(typeof(RecordingType))))
                @Html.ValidationMessageFor(model => model.Type)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Media, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Media, new SelectList(Enum.GetValues(typeof(MediaType))))
                @Html.ValidationMessageFor(model => model.Media)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comments, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Comments)
                @Html.ValidationMessageFor(model => model.Comments)
            </div>
        </div>

        <p class="col-md-2" style="text-align:right;">
            <strong>Created:</strong> @Html.DisplayFor(model => model.CreatedOn)
        </p>

        <p class="col-md-2" style="text-align:left;">
            <strong>Updated:</strong> @Html.DisplayFor(model => model.LastUpdated)
        </p>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
